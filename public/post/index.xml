<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on YTSONG&#39;s HOME</title>
    <link>/post/</link>
    <description>Recent content in Posts on YTSONG&#39;s HOME</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 18 Dec 2020 00:00:00 +0000</lastBuildDate><atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Customise dateRangeInput</title>
      <link>/post/customise-daterangeinput/</link>
      <pubDate>Fri, 18 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/customise-daterangeinput/</guid>
      <description>Option A: fix dateRangeInput  source: https://stackoverflow.com/questions/41012125/r-shiny-daterange-input-month-year-only further development: https://stackoverflow.com/questions/31152960/display-only-months-in-daterangeinput-or-dateinput-for-a-shiny-app-r-programmin  Step 1 is to customize dateInput and dateRangeInput.
library(shiny) library(lubridate) dateInput2 &amp;lt;- function(inputId, label, minview = &amp;quot;days&amp;quot;, maxview = &amp;quot;decades&amp;quot;, ...) { d &amp;lt;- shiny::dateInput(inputId, label, ...) d$children[[2L]]$attribs[[&amp;quot;data-date-min-view-mode&amp;quot;]] &amp;lt;- minview d$children[[2L]]$attribs[[&amp;quot;data-date-max-view-mode&amp;quot;]] &amp;lt;- maxview d } dateRangeInput2 &amp;lt;- function(inputId, label, minview = &amp;quot;days&amp;quot;, maxview = &amp;quot;decades&amp;quot;, ...) { d &amp;lt;- shiny::dateRangeInput(inputId, label, ...) d$children[[2L]]$children[[1]]$attribs[[&amp;quot;data-date-min-view-mode&amp;quot;]] &amp;lt;- minview d$children[[2L]]$children[[3]]$attribs[[&amp;quot;data-date-min-view-mode&amp;quot;]] &amp;lt;- minview d$children[[2L]]$children[[1]]$attribs[[&amp;quot;data-date-max-view-mode&amp;quot;]] &amp;lt;- maxview d$children[[2L]]$children[[3]]$attribs[[&amp;quot;data-date-max-view-mode&amp;quot;]] &amp;lt;- maxview d } Step 2 is to apply in a minimum example.</description>
    </item>
    
    <item>
      <title>Data Source - Research</title>
      <link>/post/data-source-research/</link>
      <pubDate>Fri, 11 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/data-source-research/</guid>
      <description> ASJC - All Science Journal Classification  List of journal classifications Source: https://pg.edu.pl/documents/611754/75313317/asjc
 Full code list with category description Source: https://www.journalsindexed.com/2016/06/asjc-code-list.html
   </description>
    </item>
    
    <item>
      <title>Shiny bookmarking</title>
      <link>/post/shiny-bookmarking/</link>
      <pubDate>Fri, 11 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/shiny-bookmarking/</guid>
      <description> Shiny bookmark without bookmark source: https://www.r-bloggers.com/2020/12/bookmarking-a-shiny-app-without-shiny-bookmarking/
 </description>
    </item>
    
    <item>
      <title>R Colour Tips</title>
      <link>/post/r-colour-tips/</link>
      <pubDate>Thu, 19 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/r-colour-tips/</guid>
      <description> Fast sample colour Sample a number of colours from a color pallet.
Colorsred = rev (c(brewer.pal(6,&amp;quot;Reds&amp;quot;))) Colorsred ## [1] &amp;quot;#A50F15&amp;quot; &amp;quot;#DE2D26&amp;quot; &amp;quot;#FB6A4A&amp;quot; &amp;quot;#FC9272&amp;quot; &amp;quot;#FCBBA1&amp;quot; &amp;quot;#FEE5D9&amp;quot;  RColorBrewer book Source: https://bookdown.org/rdpeng/exdata/plotting-and-color-in-r.html
library(RColorBrewer) display.brewer.all()  </description>
    </item>
    
    <item>
      <title>Map in R</title>
      <link>/post/map-in-r/</link>
      <pubDate>Wed, 18 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/map-in-r/</guid>
      <description>Reading and writing spatial data in R Download SA files in ESRI Shapefile Format from https://www.abs.gov.au/AUSSTATS/abs@.nsf/DetailsPage/1270.0.55.001July%202016?OpenDocument. Source: https://medium.com/analytics-vidhya/mapping-australia-in-r-6ce092c48b49
AUS_SA2_shp &amp;lt;- read_sf(&amp;quot;data/map/1270055001_sa2_2016_aust_shape&amp;quot;,&amp;quot;SA2_2016_AUST&amp;quot;) st_write(AUS_SA2_shp, &amp;quot;data/sa2_dt&amp;quot;, driver=&amp;quot;ESRI Shapefile&amp;quot;) Another post about reading and writing spatial data https://mgimond.github.io/Spatial/reading-and-writing-spatial-data-in-r.html#exporting-to-different-data-file-formats
 Package comparison:  baseR ggplot2 tmap ggmap Leaflet mapdeck  baseR Source: https://cran.r-project.org/web/packages/cancensus/vignettes/Making_maps_with_cancensus.html
 ggplot2 Using geom_sf on Mac is super slow if it is even possible. People suggest to install Quartz on Mac OS.</description>
    </item>
    
    <item>
      <title>R Saving Image Tips</title>
      <link>/post/r-saving-image-tips/</link>
      <pubDate>Fri, 13 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/r-saving-image-tips/</guid>
      <description>Create new directory My habit is to create a suffix with system date to archive different versions of graphs. However, one can also use different folder names to manage archives. dir.create exists in base R.
# Name a folder with name test and system date as suffix folder_name &amp;lt;- str_c(&amp;quot;test_&amp;quot;, Sys.Date()) # Create a folder with the name set above dir.create(folder_name) # Create sub-folder with name subfolder1 dir.create(file.path(folder_name, &amp;quot;subfolder1&amp;quot;))  Save images into the directory Deal with saving a number of plots is to generate all plots first, name them, and then passing their names and actual plots as lists into map2.</description>
    </item>
    
    <item>
      <title>Basic but Useful R Tips</title>
      <link>/post/basic-but-useful-r-tips/</link>
      <pubDate>Thu, 12 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/basic-but-useful-r-tips/</guid>
      <description>Data Exploration I code in tidyverse universe plus tidylog to output all message corresponding to changes made to vector, dataframe, tibble, etc. Please find tidylog package @ https://github.com/elbersb/tidylog.
 An initial step is often to preview a dataset. An alternative to summary is describe in Hmisc package. The benefits will be it counts number of NAs as summary does, but it also show a frequency table for factor/character.</description>
    </item>
    
  </channel>
</rss>
